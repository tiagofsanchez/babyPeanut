{"ast":null,"code":"import _classCallCheck from \"/Users/tiagoformosinhosanchez/Projects/babyPeanaut/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tiagoformosinhosanchez/Projects/babyPeanaut/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tiagoformosinhosanchez/Projects/babyPeanaut/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tiagoformosinhosanchez/Projects/babyPeanaut/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tiagoformosinhosanchez/Projects/babyPeanaut/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tiagoformosinhosanchez/Projects/babyPeanaut/src/components/Input.js\";\nimport React from 'react';\nimport { Form, FormGroup } from 'semantic-ui-react';\n/* this will need to be a list of times */\n\nvar options = [{\n  key: 'm',\n  text: 'Male',\n  value: 'male'\n}, {\n  key: 'f',\n  text: 'Female',\n  value: 'female'\n}];\n\nvar BabyInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BabyInput, _React$Component);\n\n  function BabyInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BabyInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BabyInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleChange = function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        value: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BabyInput, [{\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        unstackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        fluid: true,\n        label: \"Gender\",\n        options: options,\n        placeholder: \"Gender\",\n        width: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        fluid: true,\n        label: \"Gender\",\n        options: options,\n        placeholder: \"Gender\",\n        width: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        unstackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Notes\"), React.createElement(Form.TextArea, {\n        placeholder: \"The place where you keep your notes...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"What side?\"), React.createElement(Form.Radio, {\n        label: \"Right\",\n        value: \"rt\",\n        checked: value === 'rt',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Form.Radio, {\n        label: \"Left\",\n        value: \"lt\",\n        checked: value === 'lt',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(Form.Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return BabyInput;\n}(React.Component);\n\nexport default BabyInput;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/babyPeanaut/src/components/Input.js"],"names":["React","Form","FormGroup","options","key","text","value","BabyInput","state","handleChange","e","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AAGA;;AACA,IAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CADY,EAEZ;AAAEF,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CAFY,CAAhB;;IAKMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ,E;;UAERC,Y,GAAe,UAACC,CAAD;AAAA,UAAMJ,KAAN,QAAMA,KAAN;AAAA,aAAkB,MAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAd,CAAlB;AAAA,K;;;;;;;6BAEN;AAAA,UACGA,KADH,GACa,KAAKE,KADlB,CACGF,KADH;AAEL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,WAAW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,MAAlB;AAAmB,QAAA,KAAK,EAAC,QAAzB;AAAkC,QAAA,OAAO,EAAEH,OAA3C;AAAoD,QAAA,WAAW,EAAC,QAAhE;AAAyE,QAAA,KAAK,EAAC,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,MAAlB;AAAmB,QAAA,KAAK,EAAC,QAAzB;AAAkC,QAAA,OAAO,EAAEA,OAA3C;AAAoD,QAAA,WAAW,EAAC,QAAhE;AAAyE,QAAA,KAAK,EAAC,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,EAQI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,WAAW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA,oBAAC,IAAD,CAAM,QAAN;AAAe,QAAA,WAAW,EAAC,wCAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CARJ,EAYI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,KAAK,EAAC,OADV;AAEI,QAAA,KAAK,EAAC,IAFV;AAGI,QAAA,OAAO,EAAEG,KAAK,KAAK,IAHvB;AAII,QAAA,QAAQ,EAAE,KAAKG,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,KAAK,EAAC,MADV;AAEI,QAAA,KAAK,EAAC,IAFV;AAGI,QAAA,OAAO,EAAEH,KAAK,KAAK,IAHvB;AAII,QAAA,QAAQ,EAAE,KAAKG,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CAZJ,EA6BI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ,CADJ;AAiCH;;;;EAxCmBT,KAAK,CAACY,S;;AA2C9B,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport { Form, FormGroup } from 'semantic-ui-react';\n\n\n/* this will need to be a list of times */\nconst options = [\n    { key: 'm', text: 'Male', value: 'male' },\n    { key: 'f', text: 'Female', value: 'female' },\n]\n\nclass BabyInput extends React.Component {\n    state = {}\n\n    handleChange = (e, { value }) => this.setState({ value })\n\n    render() {\n        const { value } = this.state\n        return (\n            <Form>\n                <Form.Group unstackable>\n\n                    {/* need to transfor this into duration and a list of times */}\n\n                    <Form.Select fluid label='Gender' options={options} placeholder='Gender' width='equal' />\n                    <Form.Select fluid label='Gender' options={options} placeholder='Gender' width='equal' />\n                </Form.Group>\n                <Form.Group unstackable>\n                <label>Notes</label>\n                <Form.TextArea placeholder='The place where you keep your notes...' />\n                </Form.Group>\n                <Form.Group inline>\n                    <label>What side?</label>\n                    <Form.Radio\n                        label='Right'\n                        value='rt'\n                        checked={value === 'rt'}\n                        onChange={this.handleChange}\n                    />\n                    <Form.Radio\n                        label='Left'\n                        value='lt'\n                        checked={value === 'lt'}\n                        onChange={this.handleChange}\n                    />\n                </Form.Group>\n\n\n                <Form.Button>Save</Form.Button>\n            </Form>\n        )\n    }\n}\n\nexport default BabyInput;"]},"metadata":{},"sourceType":"module"}