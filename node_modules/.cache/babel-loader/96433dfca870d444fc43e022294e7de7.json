{"ast":null,"code":"import _classCallCheck from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tiagoformosinhosanchez/Projects/jamming/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport '../SearchBar/searchbar';\nimport '../SearchResults/searchresults';\nimport '../Playlist/playlist';\nimport SearchBar from '../SearchBar/searchbar';\nimport SearchResults from '../SearchResults/searchresults';\nimport Playlist from '../Playlist/playlist';\nimport Spotify from '../../util/spotify';\nimport PopUp from '../PopUp/popUp';\nSpotify.getAccessToken();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [],\n      playListName: \"Top List\",\n      playListTracks: [],\n      popUpShow: false\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var tempPlaylist = this.state.playListTracks;\n\n      if (this.state.playListTracks.find(function (savedTrack) {\n        return savedTrack.id === track.id;\n      })) {\n        return;\n      } else {\n        tempPlaylist.push(track);\n        this.setState({\n          playListTracks: tempPlaylist\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tempPlaylist = this.state.playListTracks;\n      var newPlaylist = tempPlaylist.filter(function (removeTrack) {\n        return removeTrack.id !== track.id;\n      });\n      this.setState({\n        playListTracks: newPlaylist\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playListName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var trackURIs = this.state.playListTracks.map(function (track) {\n        return track.uri;\n      });\n      Spotify.savePlaylist(this.state.playListName, trackURIs);\n      this.setState(function (prevState) {\n        return {\n          playListName: 'New Playlist',\n          playListTracks: []\n        };\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      var _this2 = this;\n\n      Spotify.search(term).then(function (searchResults) {\n        return _this2.setState({\n          searchResults: searchResults\n        });\n      });\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchResults = _this$state.searchResults,\n          playListName = _this$state.playListName,\n          playListTracks = _this$state.playListTracks;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.showPopup ? React.createElement(PopUp, {\n        onSave: this.savePlaylist,\n        onChoose: this.togglePopup.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }) : null)), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        onChoose: this.togglePopup.bind(this),\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        playListName: playListName,\n        playListTracks: playListTracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/jamming/src/components/App/App.js"],"names":["React","Component","SearchBar","SearchResults","Playlist","Spotify","PopUp","getAccessToken","App","props","state","searchResults","playListName","playListTracks","popUpShow","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tempPlaylist","find","savedTrack","id","push","setState","newPlaylist","filter","name","trackURIs","map","uri","prevState","term","then","showPopup","togglePopup"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,wBAAP;AACA,OAAO,gCAAP;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAIAD,OAAO,CAACE,cAAR;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,YAAY,EAAE,UAFH;AAGXC,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAOA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,uDAA1B;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,uDAApB;AACA,UAAKI,MAAL,GAAc,MAAKA,MAAL,CAAYJ,IAAZ,uDAAd;AAbiB;AAelB;;;;6BAGQK,K,EAAO;AACd,UAAIC,YAAY,GAAG,KAAKZ,KAAL,CAAWG,cAA9B;;AACA,UAAI,KAAKH,KAAL,CAAWG,cAAX,CAA0BU,IAA1B,CAA+B,UAAAC,UAAU;AAAA,eAAIA,UAAU,CAACC,EAAX,KAAkBJ,KAAK,CAACI,EAA5B;AAAA,OAAzC,CAAJ,EAA8E;AAC5E;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAACI,IAAb,CAAkBL,KAAlB;AACA,aAAKM,QAAL,CAAc;AAAEd,UAAAA,cAAc,EAAES;AAAlB,SAAd;AACD;AACF;;;gCAEWD,K,EAAO;AACjB,UAAMC,YAAY,GAAG,KAAKZ,KAAL,CAAWG,cAAhC;AACA,UAAMe,WAAW,GAAGN,YAAY,CAACO,MAAb,CAAoB,UAAAZ,WAAW;AAAA,eAAIA,WAAW,CAACQ,EAAZ,KAAmBJ,KAAK,CAACI,EAA7B;AAAA,OAA/B,CAApB;AACA,WAAKE,QAAL,CAAc;AACZd,QAAAA,cAAc,EAAEe;AADJ,OAAd;AAGD;;;uCAEkBE,I,EAAM;AACvB,WAAKH,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAEkB;AAAhB,OAAd;AACD;;;mCAGc;AACb,UAAMC,SAAS,GAAG,KAAKrB,KAAL,CAAWG,cAAX,CAA0BmB,GAA1B,CAA8B,UAAAX,KAAK,EAAI;AACvD,eAAOA,KAAK,CAACY,GAAb;AACD,OAFiB,CAAlB;AAGA5B,MAAAA,OAAO,CAACc,YAAR,CAAqB,KAAKT,KAAL,CAAWE,YAAhC,EAA8CmB,SAA9C;AACA,WAAKJ,QAAL,CAAc,UAACO,SAAD,EAAe;AAC3B,eAAO;AACLtB,UAAAA,YAAY,EAAE,cADT;AAELC,UAAAA,cAAc,EAAE;AAFX,SAAP;AAID,OALD;AAOD;;;2BAEMsB,I,EAAM;AAAA;;AACX9B,MAAAA,OAAO,CAACe,MAAR,CAAee,IAAf,EACGC,IADH,CACQ,UAAAzB,aAAa;AAAA,eAAI,MAAI,CAACgB,QAAL,CAAc;AACnChB,UAAAA,aAAa,EAAEA;AADoB,SAAd,CAAJ;AAAA,OADrB;AAID;;;kCAEa;AACZ,WAAKgB,QAAL,CAAc;AACZU,QAAAA,SAAS,EAAE,CAAC,KAAK3B,KAAL,CAAW2B;AADX,OAAd;AAGD;;;6BAEQ;AAAA,wBAEiD,KAAK3B,KAFtD;AAAA,UAECC,aAFD,eAECA,aAFD;AAAA,UAEgBC,YAFhB,eAEgBA,YAFhB;AAAA,UAE8BC,cAF9B,eAE8BA,cAF9B;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAN,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,KAAKH,KAAL,CAAW2B,SAAX,GACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKlB,YAApB;AAAkC,QAAA,QAAQ,EAAE,KAAKmB,WAAL,CAAiBtB,IAAjB,CAAsB,IAAtB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAEI,IAJV,CADF,CAFF,EAWE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKI,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,aAAa,EAAET,aAA9B;AAA6C,QAAA,KAAK,EAAE,KAAKI,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKuB,WAAL,CAAiBtB,IAAjB,CAAsB,IAAtB,CAApB;AAAiD,QAAA,YAAY,EAAE,KAAKE,kBAApE;AAAwF,QAAA,QAAQ,EAAE,KAAKD,WAAvG;AAAoH,QAAA,YAAY,EAAEL,YAAlI;AAAgJ,QAAA,cAAc,EAAEC,cAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CAXF,CADF;AAqBD;;;;EA/FeZ,S;;AAkGlB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport '../SearchBar/searchbar';\nimport '../SearchResults/searchresults';\nimport '../Playlist/playlist';\nimport SearchBar from '../SearchBar/searchbar';\nimport SearchResults from '../SearchResults/searchresults';\nimport Playlist from '../Playlist/playlist';\nimport Spotify from '../../util/spotify'\nimport PopUp from '../PopUp/popUp';\n\n\n\nSpotify.getAccessToken();\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playListName: \"Top List\",\n      playListTracks: [], \n      popUpShow: false\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n   \n  }\n\n\n  addTrack(track) {\n    let tempPlaylist = this.state.playListTracks;\n    if (this.state.playListTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      tempPlaylist.push(track);\n      this.setState({ playListTracks: tempPlaylist })\n    }\n  }\n\n  removeTrack(track) {\n    const tempPlaylist = this.state.playListTracks;\n    const newPlaylist = tempPlaylist.filter(removeTrack => removeTrack.id !== track.id);\n    this.setState({\n      playListTracks: newPlaylist\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playListName: name })\n  }\n\n\n  savePlaylist() {\n    const trackURIs = this.state.playListTracks.map(track => {\n      return track.uri;\n    });\n    Spotify.savePlaylist(this.state.playListName, trackURIs)\n    this.setState((prevState) => {\n      return {\n        playListName: 'New Playlist',\n        playListTracks: []\n      }\n    },\n    );\n  }\n\n  search(term) {\n    Spotify.search(term)\n      .then(searchResults => this.setState({\n        searchResults: searchResults\n      }));\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n \n  render() {\n    \n    const { searchResults, playListName, playListTracks } = this.state\n    \n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"popup\">\n          <div className =\"popup_inner\">\n              {\n                this.state.showPopup ?\n                  <PopUp onSave={this.savePlaylist} onChoose={this.togglePopup.bind(this)}/>\n                  : null\n              }\n          </div>    \n        </div>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={searchResults} onAdd={this.addTrack} />\n            <Playlist onChoose={this.togglePopup.bind(this)} onNameChange={this.updatePlaylistName} onRemove={this.removeTrack} playListName={playListName} playListTracks={playListTracks} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}