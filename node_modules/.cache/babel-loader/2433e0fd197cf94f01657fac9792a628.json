{"ast":null,"code":"import SearchBar from \"../components/SearchBar/searchbar\";\nvar clientID = '33c842c37a0242a5add060b9629e9455';\nvar redirectURI = 'http://localhost:3000';\nvar accessToken;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) return accessToken;else if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n      accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n      var expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n      window.setTimeout(function () {\n        return accessToken = '';\n      }, expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n      console.log(\"access token successfully retrieved.\");\n    } else {\n      var url = \"https://accounts.spotify.com/authorize?client_id=\".concat(clientID, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI);\n      window.location = url;\n    }\n  }\n};\n/* Questions: \n1. How do i know about this fetch url?  I think this will be here https://developer.spotify.com/documentation/web-api/reference-beta/#endpoint-search\n2. Do I need to take care of any error, or that is just for POST method?*/\n\nvar search = function search(searchterm) {\n  var options = {\n    headers: {\n      Authorization: \"Bearer \".concat(accessToken)\n    },\n    body: JSON.stringify(search)\n  };\n  return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(searchterm), options).then(function (res) {\n    return res.json();\n  });\n};\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/jamming/src/util/spotify.js"],"names":["SearchBar","clientID","redirectURI","accessToken","Spotify","getAccessToken","window","location","href","match","expiresIn","setTimeout","history","pushState","console","log","url","search","searchterm","options","headers","Authorization","body","JSON","stringify","fetch","then","res","json"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mCAAtB;AAEA,IAAMC,QAAQ,GAAG,kCAAjB;AACA,IAAMC,WAAW,GAAG,uBAApB;AACA,IAAIC,WAAJ;AAEA,IAAMC,OAAO,GAAG;AAGZC,EAAAA,cAHY,4BAGK;AACb,QAAGF,WAAH,EACE,OAAOA,WAAP,CADF,KAEK,IAAGG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,KAAsDH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAzD,EACL;AACEN,MAAAA,WAAW,GAAGG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,EAAmD,CAAnD,CAAd;AACA,UAAMC,SAAS,GAAGJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,EAAiD,CAAjD,CAAlB;AAEAH,MAAAA,MAAM,CAACK,UAAP,CAAkB;AAAA,eAAMR,WAAW,GAAG,EAApB;AAAA,OAAlB,EAA0CO,SAAS,GAAC,IAApD;AACAJ,MAAAA,MAAM,CAACM,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AAEA,aAAOV,WAAP;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,KAVI,MAYL;AACE,UAAIC,GAAG,8DAAuDf,QAAvD,4EAAiIC,WAAjI,CAAP;AACAI,MAAAA,MAAM,CAACC,QAAP,GAAkBS,GAAlB;AACD;AACF;AAtBS,CAAhB;AAwBA;;;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,UAAU,EAAI;AACzB,MAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,mBAAYlB,WAAZ;AAAd,KADG;AAEZmB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AAFM,GAAhB;AAIA,SAAOQ,KAAK,0DAAoDP,UAApD,GAAkEC,OAAlE,CAAL,CACNO,IADM,CACA,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADH,CAAP;AAEH,CAPD;;AASA,eAAexB,OAAf","sourcesContent":["import SearchBar from \"../components/SearchBar/searchbar\";\n\nconst clientID = '33c842c37a0242a5add060b9629e9455';\nconst redirectURI = 'http://localhost:3000';\nlet accessToken\n\nconst Spotify = {\n   \n\n    getAccessToken() {\n        if(accessToken)\n          return accessToken;\n        else if(window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/))\n        {\n          accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n          const expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n      \n          window.setTimeout(() => accessToken = '', expiresIn*1000);\n          window.history.pushState('Access Token', null, '/');\n      \n          return accessToken;\n          console.log(\"access token successfully retrieved.\");\n        }\n        else\n        {\n          let url = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\n          window.location = url;\n        }\n      },\n}\n/* Questions: \n1. How do i know about this fetch url?  I think this will be here https://developer.spotify.com/documentation/web-api/reference-beta/#endpoint-search\n2. Do I need to take care of any error, or that is just for POST method?*/\n\nconst search = searchterm => {\n    const options = {\n        headers: {Authorization: `Bearer ${accessToken}`},\n        body: JSON.stringify(search)\n    }\n    return fetch (`https://api.spotify.com/v1/search?type=track&q=${searchterm}`, options)\n    .then (res => res.json())\n}\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}