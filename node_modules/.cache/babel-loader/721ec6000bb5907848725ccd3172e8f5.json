{"ast":null,"code":"import SearchBar from \"../components/SearchBar/searchbar\";\nvar clientId = '33c842c37a0242a5add060b9629e9455';\nvar redirectUri = 'http://localhost:3000';\nvar accessToken;\nvar expiresIn = undefined;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) return accessToken;else if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n      accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n      expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n      window.setTimeout(function () {\n        return accessToken = '';\n      }, expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n      console.log(\"access token successfully retrieved.\");\n    } else {\n      var url = \"https://accounts.spotify.com/authorize?client_id=\".concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);\n      window.location = url;\n    }\n  },\n  search: function search(searchterm) {\n    var options = {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    };\n    var searchUrl = \"https://api.spotify.com/v1/search?type=track&q=\".concat(searchterm.replace(' ', '%20'));\n    fetch(searchUrl, options).then(function (res) {\n      return console.log(res.json());\n    });\n  }\n};\n/* this is the way I want to take care of the json */\n\n/* .then(data => {\n  return data.tracks.items.map(track => {\n    return {\n      id: track.id,\n      name: track.name,\n      artist: track.artists[0].name,\n      album: track.album.name,\n      uri: track.uri\n    };\n});\n})\n.catch (err => console.log(err));\n},  */\n\n/* Questions: \n1. To check the url I think this will be here https://developer.spotify.com/documentation/web-api/reference-beta/#endpoint-search\n2. Do I need to take care of any error, or that is just for POST method?*/\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/jamming/src/util/spotify.js"],"names":["SearchBar","clientId","redirectUri","accessToken","expiresIn","undefined","Spotify","getAccessToken","window","location","href","match","setTimeout","history","pushState","console","log","url","search","searchterm","options","headers","Authorization","searchUrl","replace","fetch","then","res","json"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mCAAtB;AAEA,IAAMC,QAAQ,GAAG,kCAAjB;AACA,IAAMC,WAAW,GAAG,uBAApB;AACA,IAAIC,WAAJ;AACA,IAAIC,SAAS,GAAGC,SAAhB;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,cADc,4BACG;AACf,QAAGJ,WAAH,EACE,OAAOA,WAAP,CADF,KAEK,IAAGK,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,KAAsDH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAzD,EACL;AACER,MAAAA,WAAW,GAAGK,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,EAAmD,CAAnD,CAAd;AACAP,MAAAA,SAAS,GAAGI,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,EAAiD,CAAjD,CAAZ;AAEAH,MAAAA,MAAM,CAACI,UAAP,CAAkB;AAAA,eAAMT,WAAW,GAAG,EAApB;AAAA,OAAlB,EAA0CC,SAAS,GAAC,IAApD;AACAI,MAAAA,MAAM,CAACK,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AAEA,aAAOX,WAAP;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,KAVI,MAYL;AACE,UAAIC,GAAG,8DAAuDhB,QAAvD,4EAAiIC,WAAjI,CAAP;AACAM,MAAAA,MAAM,CAACC,QAAP,GAAkBQ,GAAlB;AACD;AACF,GApBa;AAwBVC,EAAAA,MAxBU,kBAwBHC,UAxBG,EAwBS;AACjB,QAAMC,OAAO,GAAG;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,mBAAYnB,WAAZ;AAAd;AAAV,KAAhB;AACA,QAAMoB,SAAS,4DAAqDJ,UAAU,CAACK,OAAX,CAAmB,GAAnB,EAAwB,KAAxB,CAArD,CAAf;AACFC,IAAAA,KAAK,CAAEF,SAAF,EAAaH,OAAb,CAAL,CACCM,IADD,CACM,UAAAC,GAAG;AAAA,aAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,IAAJ,EAAZ,CAAJ;AAAA,KADT;AAGD;AA9BW,CAAhB;AAkCM;;AACA;;;;;;;;;;;;;;AAcN;;;;AAKA,eAAetB,OAAf","sourcesContent":["import SearchBar from \"../components/SearchBar/searchbar\";\n\nconst clientId = '33c842c37a0242a5add060b9629e9455';\nconst redirectUri = 'http://localhost:3000';\nlet accessToken\nlet expiresIn = undefined;\n\n\nconst Spotify = {\n  getAccessToken() {\n    if(accessToken)\n      return accessToken;\n    else if(window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/))\n    {\n      accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n      expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n  \n      window.setTimeout(() => accessToken = '', expiresIn*1000);\n      window.history.pushState('Access Token', null, '/');\n  \n      return accessToken;\n      console.log(\"access token successfully retrieved.\");\n    }\n    else\n    {\n      let url = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = url;\n    }\n  }, \n  \n\n\n      search(searchterm) {\n        const options = {headers: {Authorization: `Bearer ${accessToken}`},}\n        const searchUrl = `https://api.spotify.com/v1/search?type=track&q=${searchterm.replace(' ', '%20')}`;\n      fetch (searchUrl, options)\n      .then(res => console.log(res.json()))\n      \n    }\n  }\n\n\n      /* this is the way I want to take care of the json */ \n      /* .then(data => {\n        return data.tracks.items.map(track => {\n          return {\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n          };\n      });\n      })\n      .catch (err => console.log(err));\n    },  */ \n    \n/* Questions: \n1. To check the url I think this will be here https://developer.spotify.com/documentation/web-api/reference-beta/#endpoint-search\n2. Do I need to take care of any error, or that is just for POST method?*/\n\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}