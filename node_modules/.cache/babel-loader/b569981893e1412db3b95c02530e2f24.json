{"ast":null,"code":"import _classCallCheck from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tiagoformosinhosanchez/Projects/jamming/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport '../SearchBar/searchbar';\nimport '../SearchResults/searchresults';\nimport '../Playlist/playlist';\nimport SearchBar from '../SearchBar/searchbar';\nimport SearchResults from '../SearchResults/searchresults';\nimport Playlist from '../Playlist/playlist';\nimport Spotify from '../../util/spotify';\nSpotify.getAccessToken();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [],\n      playListName: \"Top List\",\n      playListTracks: []\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var tempPlaylist = this.state.playListTracks;\n\n      if (this.state.playListTracks.find(function (savedTrack) {\n        return savedTrack.id === track.id;\n      })) {\n        return;\n      } else {\n        tempPlaylist.push(track);\n        this.setState({\n          playListTracks: tempPlaylist\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tempPlaylist = this.state.playListTracks;\n      var newPlaylist = tempPlaylist.filter(function (removeTrack) {\n        return removeTrack.id !== track.id;\n      });\n      this.setState({\n        playListTracks: newPlaylist\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playListName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var _this2 = this;\n\n      console.log(this.state.playListTracks);\n      var trackURIs = this.state.playListTracks.map(function (track) {\n        return track.uri;\n      });\n      Spotify.savePlaylist(this.state.playlistName, trackURIs);\n      this.setState(function (prevState) {\n        return {\n          playlistName: 'New Playlist',\n          playlistTracks: []\n        };\n      }, function () {\n        _this2.updatePlaylistName('New Playlist');\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      var _this3 = this;\n\n      Spotify.search(term).then(function (searchResults) {\n        return _this3.setState({\n          searchResults: searchResults\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchResults = _this$state.searchResults,\n          playListName = _this$state.playListName,\n          playListTracks = _this$state.playListTracks;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        onSave: this.savePlaylist,\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        playListName: playListName,\n        playListTracks: playListTracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/jamming/src/components/App/App.js"],"names":["React","Component","SearchBar","SearchResults","Playlist","Spotify","getAccessToken","App","props","state","searchResults","playListName","playListTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tempPlaylist","find","savedTrack","id","push","setState","newPlaylist","filter","name","console","log","trackURIs","map","uri","playlistName","prevState","playlistTracks","term","then"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport '../SearchBar/searchbar';\nimport '../SearchResults/searchresults';\nimport '../Playlist/playlist';\nimport SearchBar from '../SearchBar/searchbar';\nimport SearchResults from '../SearchResults/searchresults';\nimport Playlist from '../Playlist/playlist';\nimport Spotify from '../../util/spotify'\n\n\nSpotify.getAccessToken();\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playListName: \"Top List\",\n      playListTracks: []\n      }\n\n      this.addTrack = this.addTrack.bind(this);\n      this.removeTrack = this.removeTrack.bind(this);\n      this.updatePlaylistName= this.updatePlaylistName.bind(this);\n      this.savePlaylist = this.savePlaylist.bind(this); \n      this.search = this.search.bind(this);\n     }\n\n  addTrack (track) {\n    let tempPlaylist = this.state.playListTracks;\n    if(this.state.playListTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else { \n      tempPlaylist.push(track);\n      this.setState ({playListTracks: tempPlaylist})\n    }\n  }\n\n  removeTrack (track) {\n    const tempPlaylist= this.state.playListTracks;\n    const newPlaylist = tempPlaylist.filter(removeTrack => removeTrack.id !== track.id);\n    this.setState ({playListTracks: newPlaylist});\n    }\n\n    updatePlaylistName(name) {\n    this.setState({playListName: name})\n  }  \n  \n  savePlaylist () {\n    console.log(this.state.playListTracks);\n    const trackURIs = this.state.playListTracks.map(track => {return track.uri});\n    Spotify.savePlaylist(this.state.playlistName, trackURIs)\n    this.setState((prevState) => {\n        return {\n          playlistName: 'New Playlist',\n          playlistTracks: []\n      }\n     },\n        () => {this.updatePlaylistName('New Playlist')}\n      );\n  }\n\n    search(term){\n      Spotify.search(term)\n      .then(searchResults => this.setState({\n        searchResults: searchResults\n      }));\n    }\n\n  render() {\n    const {searchResults, playListName, playListTracks} = this.state\n    return (\n      <div>\n          <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n          <div class=\"App\">\n            <SearchBar onSearch={this.search} />\n            <div className=\"App-playlist\">\n              <SearchResults searchResults={searchResults} onAdd={this.addTrack}/>\n              <Playlist onSave={this.savePlaylist} onNameChange={this.updatePlaylistName} onRemove={this.removeTrack} playListName={playListName} playListTracks={playListTracks}/>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}