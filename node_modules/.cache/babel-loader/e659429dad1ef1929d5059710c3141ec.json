{"ast":null,"code":"import _classCallCheck from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport SearchBar from \"../components/SearchBar/searchbar\";\nvar clientID = '33c842c37a0242a5add060b9629e9455';\nvar redirectURI = 'http://localhost:3000';\nvar accessToken;\n\nvar Spotify =\n/*#__PURE__*/\nfunction () {\n  function Spotify() {\n    _classCallCheck(this, Spotify);\n\n    this.accessToken = null;\n  }\n\n  _createClass(Spotify, [{\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      if (accessToken) return accessToken;else if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n        accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n        var expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n        window.setTimeout(function () {\n          return accessToken = '';\n        }, expiresIn * 1000);\n        window.history.pushState('Access Token', null, '/');\n        return accessToken;\n        console.log(\"access token successfully retrieved.\");\n      } else {\n        var url = \"https://accounts.spotify.com/authorize?client_id=\".concat(clientID, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI);\n        window.location = url;\n      }\n    }\n  }]);\n\n  return Spotify;\n}();\n/* Questions: \n1. How do i know about this fetch url?  I think this will be here https://developer.spotify.com/documentation/web-api/reference-beta/#endpoint-search*/\n\n\nvar search = function search(searchterm) {\n  return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(searchterm)).then(function (res) {\n    return res.json();\n  });\n};\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/jamming/src/util/spotify.js"],"names":["SearchBar","clientID","redirectURI","accessToken","Spotify","window","location","href","match","expiresIn","setTimeout","history","pushState","console","log","url","search","searchterm","fetch","then","res","json"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,mCAAtB;AAEA,IAAMC,QAAQ,GAAG,kCAAjB;AACA,IAAMC,WAAW,GAAG,uBAApB;AACA,IAAIC,WAAJ;;IAEMC,O;;;AACF,qBAAc;AAAA;;AACV,SAAKD,WAAL,GAAmB,IAAnB;AACH;;;;qCAEgB;AACb,UAAGA,WAAH,EACE,OAAOA,WAAP,CADF,KAEK,IAAGE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,KAAsDH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAzD,EACL;AACEL,QAAAA,WAAW,GAAGE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,EAAmD,CAAnD,CAAd;AACA,YAAMC,SAAS,GAAGJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,EAAiD,CAAjD,CAAlB;AAEAH,QAAAA,MAAM,CAACK,UAAP,CAAkB;AAAA,iBAAMP,WAAW,GAAG,EAApB;AAAA,SAAlB,EAA0CM,SAAS,GAAC,IAApD;AACAJ,QAAAA,MAAM,CAACM,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AAEA,eAAOT,WAAP;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,OAVI,MAYL;AACE,YAAIC,GAAG,8DAAuDd,QAAvD,4EAAiIC,WAAjI,CAAP;AACAG,QAAAA,MAAM,CAACC,QAAP,GAAkBS,GAAlB;AACD;AACF;;;;;AAEP;;;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,UAAU,EAAI;AACzB,SAAOC,KAAK,0DAAoDD,UAApD,EAAL,CACNE,IADM,CACA,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADH,CAAP;AAEH,CAHD;;AAKA,eAAejB,OAAf","sourcesContent":["import SearchBar from \"../components/SearchBar/searchbar\";\n\nconst clientID = '33c842c37a0242a5add060b9629e9455';\nconst redirectURI = 'http://localhost:3000';\nlet accessToken\n\nclass Spotify {\n    constructor() {\n        this.accessToken = null\n    }\n\n    getAccessToken() {\n        if(accessToken)\n          return accessToken;\n        else if(window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/))\n        {\n          accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n          const expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n      \n          window.setTimeout(() => accessToken = '', expiresIn*1000);\n          window.history.pushState('Access Token', null, '/');\n      \n          return accessToken;\n          console.log(\"access token successfully retrieved.\");\n        }\n        else\n        {\n          let url = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\n          window.location = url;\n        }\n      }\n}\n/* Questions: \n1. How do i know about this fetch url?  I think this will be here https://developer.spotify.com/documentation/web-api/reference-beta/#endpoint-search*/\n\nconst search = searchterm => {\n    return fetch (`https://api.spotify.com/v1/search?type=track&q=${searchterm}`)\n    .then (res => res.json())\n}\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}