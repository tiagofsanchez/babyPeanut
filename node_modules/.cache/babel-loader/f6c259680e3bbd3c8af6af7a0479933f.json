{"ast":null,"code":"import _toConsumableArray from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tiagoformosinhosanchez/Projects/jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tiagoformosinhosanchez/Projects/jamming/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport '../SearchBar/searchbar';\nimport '../SearchResults/searchresults';\nimport '../Playlist/playlist';\nimport SearchBar from '../SearchBar/searchbar';\nimport SearchResults from '../SearchResults/searchresults';\nimport Playlist from '../Playlist/playlist';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [{\n        name: \"I would love to sing\",\n        artist: \"Tiago\",\n        album: \"The WORST ABLBUM EVER\",\n        id: 1\n      }, {\n        name: \"I would love to sing\",\n        artist: \"Tiago\",\n        album: \"The WORST ABLBUM EVER\",\n        id: 2\n      }, {\n        name: \"I would love to sing\",\n        artist: \"Tiago\",\n        album: \"The WORST ABLBUM EVER\",\n        id: 2\n      }],\n      playListName: \"Top List\",\n      playListTracks: [{\n        name: \"I would love to sing\",\n        artist: \"Tiago\",\n        album: \"The WORST ABLBUM EVER\",\n        id: 3\n      }, {\n        name: \"I would love to sing\",\n        artist: \"Tiago\",\n        album: \"The WORST ABLBUM EVER\",\n        id: 4\n      }]\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* I am not sure what this here is doing and I think this is wrong, need to check with Diogo*/\n\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      if (!this.state.playlistTracks.find(function (savedTrack) {\n        return savedTrack.id === track.id;\n      })) {\n        this.setState(function (prevState) {\n          return {\n            playlistTracks: [].concat(_toConsumableArray(prevState.playlistTracks), [track])\n          };\n        });\n      }\n    }\n    /* I dont't get how to code this method */\n\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {}\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playListName: name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchResults = _this$state.searchResults,\n          playListName = _this$state.playListName,\n          playListTracks = _this$state.playListTracks;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        playListName: playListName,\n        playListTracks: playListTracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tiagoformosinhosanchez/Projects/jamming/src/components/App/App.js"],"names":["React","Component","SearchBar","SearchResults","Playlist","App","props","state","searchResults","name","artist","album","id","playListName","playListTracks","addTrack","bind","removeTrack","updatePlaylistName","track","playlistTracks","find","savedTrack","setState","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport '../SearchBar/searchbar';\nimport '../SearchResults/searchresults';\nimport '../Playlist/playlist';\nimport SearchBar from '../SearchBar/searchbar';\nimport SearchResults from '../SearchResults/searchresults';\nimport Playlist from '../Playlist/playlist';\n\n\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      searchResults: [\n        {\n          name: \"I would love to sing\",\n          artist: \"Tiago\", \n          album: \"The WORST ABLBUM EVER\", \n          id: 1,\n        },\n        {\n          name: \"I would love to sing\",\n          artist: \"Tiago\", \n          album: \"The WORST ABLBUM EVER\",\n          id: 2,\n        },\n        {\n          name: \"I would love to sing\",\n          artist: \"Tiago\", \n          album: \"The WORST ABLBUM EVER\",\n          id: 2,\n        },\n      ],\n\n      playListName: \"Top List\",\n      \n\n      playListTracks: [\n        {\n          name: \"I would love to sing\",\n          artist: \"Tiago\", \n          album: \"The WORST ABLBUM EVER\", \n          id: 3,\n        },\n        {\n          name: \"I would love to sing\",\n          artist: \"Tiago\", \n          album: \"The WORST ABLBUM EVER\",\n          id: 4,\n        }, \n      ]\n      }\n\n\n      this.addTrack = this.addTrack.bind(this);\n      this.removeTrack = this.removeTrack.bind(this);\n      this.updatePlaylistName= this.updatePlaylistName.bind(this);\n  }\n\n  /* I am not sure what this here is doing and I think this is wrong, need to check with Diogo*/\n  addTrack (track) {\n    if (!this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      this.setState(prevState => ({\n        playlistTracks: [...prevState.playlistTracks, track]\n      }));\n    }\n    }\n\n  /* I dont't get how to code this method */    \n  removeTrack (track) {\n    }\n\n  updatePlaylistName(name) {\n    this.setState({playListName: name})\n  }  \n\n\n  render() {\n    const {searchResults, playListName, playListTracks} = this.state\n    \n    \n    return (\n      <div>\n          <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n          <div class=\"App\">\n            <SearchBar  />\n            <div className=\"App-playlist\">\n              <SearchResults searchResults={searchResults} onAdd={this.addTrack}/>\n              <Playlist onNameChange={this.updatePlaylistName} onRemove={this.removeTrack} playListName={playListName} playListTracks={playListTracks}/>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}